% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getProbability.R
\name{getProbability}
\alias{getProbability}
\title{Classify the typical days by searching for external factors (e.g. climate factors) explaning 
the occurence of a particular typical day}
\usage{
getProbability(climate, cluster, levelsProba = c(1/3, 2/3),
  extrapolationNA = TRUE)
}
\arguments{
\item{climate}{\code{data.table}, the first column contains the dates (header : Date, format : YYYY-MM-DD), 
other columns are external variable whose name must be given in the header. Data should be given with a daily time step.}

\item{cluster}{\code{data.table} output of \link{clusteringTypicalDays} or \link{clusterTypicalDaysForOneClass}}

\item{levelsProba}{\code{numeric or list}. if \code{numeric}, contains a vector of quantiles which will be used for all 
external variables and classes. 
if \code{list}, quantiles are described independenly for each class and each external variable (see examples below)}

\item{extrapolationNA}{\code{booelan} should NA values of the matrix be extrapolated (\code{TRUE}) or not (\code{FALSE})}
}
\description{
Classify the typical days by searching for external factors (e.g. climate factors) explaning 
the occurence of a particular typical day
}
\examples{

\donttest{
# load climate daily time serires
library(data.table)
climate <- fread(system.file("dataset/climate_example.txt",package = "flowBasedClustering"))

# load clustering results (or build them with clusteringTypicalDays function())
clusterTD <- readRDS(system.file("dataset/cluster_example.RDS",package = "flowBasedClustering"))

# get Probability matrices
MatProb <- getProbability(climate, clusterTD)

# run with specified probability levels, and witout auto-filling the NA cases
levelsProba <- list(summerWd = list(FR_load = c(0.5), DE_wind = c(1/3, 2/3), DE_solar = .5),
                    summerWe = list(FR_load = c(0.5, 0.7), DE_wind = c(.5))
)
MatProb <- getProbability(climate, clusterTD, levelsProba = levelsProba, extrapolationNA = FALSE)
MatProb2 <- getProbability(climate, clusterTD, levelsProba = levelsProba, extrapolationNA = TRUE)

}
}
