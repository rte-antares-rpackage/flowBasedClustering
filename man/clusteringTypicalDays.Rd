% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clusteringTypicalDays.R
\name{clusteringTypicalDays}
\alias{clusteringTypicalDays}
\title{Generate a set of flow-based typical days}
\usage{
clusteringTypicalDays(calendar, vertices, nbClustWeek = 3,
  nbClustWeekend = 1, report = TRUE, reportPath = getwd(),
  hourWeight = rep(1, 24))
}
\arguments{
\item{calendar}{\code{list}, vector of date for each period. Can be obtain with \link{getCalendar}}

\item{vertices}{\code{data.table}, 5 columns :
\itemize{
 \item Date : date (%Y-%M-%D)
 \item Period : Hour (1:24)
 \item BE : belgium vertices
 \item DE : german vertices
 \item FR : french vertices
}
This parameter can be obtained with the function \link{ptdfToVertices}.}

\item{nbClustWeek}{\code{numeric}, number of clusters for week period(working days). Defaut to 3}

\item{nbClustWeekend}{\code{numeric}, number of clusters for weekend period. Defaut to 1}

\item{report}{\code{boolean}, should a .html report be generated with the results of the clustering. Defaut to TRUE}

\item{reportPath}{\code{character}, path where the report is written. Defaut to \code{getwd()}}

\item{hourWeight}{\code{numeric}, vector of 24 weights, one for each hour of the day. The clustering algorithm
will be more accurate for the flow-based domains of the hours with a relatively higher weight.}
}
\description{
Run a clustering algorithm on the different classes of the calendar (\link{getCalendar}).
Its principle is to create clusters by
gathering the most similar days of each class before choosing among them the best
representative: it will be a so-called typical day. The metric used to determine the similarity of two days is
a weighted sum of 24 hourly distances, meaning the distances between the domains of the two
days at the same hour. This distance is defined by projecting all the vertices of each domain
on the second one and adding the differences.
}
\examples{

\dontrun{
library(data.table)

# read vertices (from file, or obtained them with ptdfToVertices() function)
vertices <- fread(system.file("dataset/vertices_example.txt",package = "flowBasedClustering"))

# build calendar (manually here to adapt to the small dataset in example)
calendar <- list()
calendar$interSeasonWe <- c("2016-09-17", "2016-09-18")
calendar$interSeasonWd <- c("2016-09-19", "2016-09-20", "2016-09-21", "2016-09-22", "2016-09-23")
calendar$winterWe <- c("2016-12-10", "2016-12-11")
calendar$winterWd <- c("2016-12-12", "2016-12-13", "2016-12-14", "2016-12-15", "2016-12-16")
calendar$summerWe <- c("2016-08-06", "2016-08-07")
calendar$summerWd <- c("2016-08-08", "2016-08-09", "2016-08-10", "2016-08-11", "2016-08-12")

# run clustering algorithm
clusterTD <- clusteringTypicalDays(calendar, vertices, nbClustWeek = 2, nbClustWeekend = 1)

# run clustering algorithm distinguishing the days only with the flow-based domains of hour 18
w <- rep(0,24)
w[18] <- 1
clusterTD <- clusteringTypicalDays(calendar, vertices,  hourWeight = w, report = FALSE)
}


}
